package btc

import (
	"encoding/hex"
	"testing"
)

func TestPbkyues(t *testing.T) {
	var tstvcs = []string {
		"04CEB28DE33FBC5ED8B343DE5B00E68A53B73653C204D236694BE2C2DD6A959AEB450163075FAE68D21D5EA9E2D07FE8742229AFAF02983034E84C614D16CF7107",
		"03CEB28DE33FBC5ED8B343DE5B00E68A53B73653C204D236694BE2C2DD6A959AEB",

		"0476232786465DE7FD05B68DB84A3C1D84AAEF2928E907D99969196383E71717A9F73B5631781A152BDBF3037AB605573A8D18E7628339EB8C4A8280E5D2E161EA",
		"0276232786465DE7FD05B68DB84A3C1D84AAEF2928E907D99969196383E71717A9",

		"04672E9066C6A7980359514621D1FE787CCD5B6539B67614B940929723BDF5623C1216E7F69AAE46FED4621DE63CA6EE1251BCC584C2362B7040DEF99F668C810B",
		"03672E9066C6A7980359514621D1FE787CCD5B6539B67614B940929723BDF5623C",

		"04B0B9D37E47380CB037C422365779C169723E4D05C300B7A8BD4A48A9B4E60F0647DEA3378908B133D69BB3E0943CCCF6872C0A94678166D819FEA558B96A812D",
		"03B0B9D37E47380CB037C422365779C169723E4D05C300B7A8BD4A48A9B4E60F06",

		"0491643DB1E5096E72FAF027D65A79085320186734BC4A5416B5F747F8761551566AD3B3EC7AA0360DEE4EBCCDBCB6FC5260881B9C747E10C671519D8713FFA4F5",
		"0391643DB1E5096E72FAF027D65A79085320186734BC4A5416B5F747F876155156",

		"04BD22E9E7AE9238EBD7937DCAF2887535B13DEB2EF9E95D5FB9225D29BDCD450FC99915A84D69CBA5E1EA1A11D6E9C49C039B949EE135B0133FEFCE156064A708",
		"02BD22E9E7AE9238EBD7937DCAF2887535B13DEB2EF9E95D5FB9225D29BDCD450F",

		"04FC0C0989BF1EC12C483AB65A63792DF96F74059DE1CB1B6599F3217A6E4957C2A9051A5FB9C15D13BBCC2FAEFF50F1BDE56BC692760A5D92DBFD52D2764BF723",
		"03FC0C0989BF1EC12C483AB65A63792DF96F74059DE1CB1B6599F3217A6E4957C2",
	}
	for i:=0; i<len(tstvcs); i+=2 {
		xy, _ := hex.DecodeString(tstvcs[i])
		x, _ := hex.DecodeString(tstvcs[i+1])
		k1, e := NewPublicKey(xy)
		if e != nil {
			t.Error("error new k1")
			return
		}
		k2, e := NewPublicKey(x)
		if e != nil {
			t.Error("error new k2")
			return
		}
		if k1.X.Cmp(k2.X)!=0 {
			t.Error("X error")
			return
		}
		if k1.Y.Cmp(k2.Y)!=0 {
			t.Error("Y error")
			return
		}
	}
}
